model:
  _target_: Bert # имя клаccа. Сам класс будет сконструирован в registry по этому имени
  num_classes: &num_classes 40
  model_path: "sberbank-ai/ruBert-large"

args: # Различные аргументы для Catalyst
  expdir: src/nlp # Путь до нашего эксперимента, с файлом `__init__`, в котором импортируется Runner, и, опционально, регистрируются все дополнительные сущности: model, callback, criterion, etc
  logdir: logs # Путь в который будут сохранятся логи
  verbose: True # Нужно ли выводить на консоль информацию об обучении
  seed: 42 # сид обучения для PyTorch, Numpy, Python и Tensorflow
  deterministic: True # Нужно ли использовать deterministic CuDNN
  benchmark: True # Нужно ли использовать CuDNN benchmark

runner: # Параметры для инициализации Runner
   _target_: ruBertNLPRunner
   input_key: &model_input "features"
   output_key: &model_output "logits"
   target_key: &model_target "targets"
   loss_key: &model_loss "loss"

engine: # Параметры для distributed training и NVIDIA Apex
  _target_: DeviceEngine
  # device: cuda:0


loggers:
# Встроенные логеры каталиста
#(Возможные логеры: https://github.com/catalyst-team/catalyst/tree/master/catalyst/loggers)
  console:
    _target_: ConsoleLogger
  mlflow:
    _target_: MLflowLogger
    experiment: "skolkovo_experiments"
    tracking_uri: http://mlflow.ddc.itnap.ru:5000/
    registry_uri: https://storage.yandexcloud.net/


stages: # Словарь всех стадий Catalyst, для обучения и/или инфера. Содержат ключевые слова с параметрами, которые применятся ко всем стейджам, так и сами имена стейджей
  stage:
    criterion: # Параметры для лосс-функции
      _target_: CrossEntropyLoss

    optimizer: # Параметры оптимизатора
      _target_: AdamW
      lr: 0.00005

    callbacks:
      optimizer: # Параметры для оптимизатора
        _target_: OptimizerCallback
        metric_key: *model_loss
      accuracy:
        _target_: AccuracyCallback
        input_key: *model_output
        target_key: *model_target
      loss:
        _target_: CriterionCallback
        input_key: *model_output
        target_key: *model_target
        metric_key: *model_loss
      verbose:
        _target_: TqdmCallback
      custom_mlflow:
        _target_: NLPMlflowLoggerCallback

    data: # Подключение данных и параметров обучения
      shuffle: True
      dataset_path: "nlp_dataset/encoded_labeled_story_clean_2.csv"
    loaders: &loaders
      batch_size: 4 # Размер батча для всех стейджей
      num_workers: 0 #для локальной поставить 0
    num_epochs: 2 # Количество эпох эксперимента
    valid_loader: valid
    main_metric: accuracy01
    minimize_metric: False